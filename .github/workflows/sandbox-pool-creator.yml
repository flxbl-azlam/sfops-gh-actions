name: "Create CI Sandboxes"
on:
  workflow_call:
    inputs:
      path-to-config:
         description: The path to sandbox pool config
         type: "string"
      metrics-provider:
        description: "The metrics provider to be used"
        type: "string"
      dashboard-repo:
        description: "Target repo to submit package version report as HTML"
        type: "string"
      sfopsbot-app-id: 
         description: The App id of the bot used for this workflow_call
         type: "string"
    secrets:
      NPM_TOKEN:
        description: "GH TOKEN to publish to NPM"
      DEVHUB_SFDX_AUTH_URL:
        description: "Devhub Auth URL"
      SB_SFDX_AUTH_URL:
        description: "Sandbox Auth URL"
      DATADOG_API_KEY:
        description: "Datadog api key to report metrics"
      DATADOG_HOST:
        description: "Datadog host to report metrics"
      SFOPSBOT_APP_PRIVATE_KEY:
        description: "Private key of the bot app used"


jobs:

  create-ci-sandbox:
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-azlam/sfops-gh-actions-lite:latest
    timeout-minutes: 720 #Set to Maximum Time out
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
            node-version: "18" 


      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
         app-id: ${{ inputs.sfopsbot-app-id }}
         private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
         owner: ${{ github.repository_owner }}


      - name: Export Datadog Environment Variables
        if: ${{ inputs.metrics-provider == 'datadog'}}
        run: |
          echo "SFPOWERSCRIPTS_DATADOG=true" >> $GITHUB_ENV
          echo "SFPOWERSCRIPTS_DATADOG_HOST=${{ secrets.DATADOG_HOST }}" >> $GITHUB_ENV
          echo "SFPOWERSCRIPTS_DATADOG_API_KEY=${{ secrets.DATADOG_API_KEY }}" >> $GITHUB_ENV


      - name: 'Authenticate DevHub'
        run: |
              echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
              sfp org login -f authfile -a devhub

      #Create Reivew sandboxes
      - name: 'Create Review Sandboxes'
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY}}
          SFOPSBOT_APP_ID: ${{ inputs.sfopsbot-app-id }}
        run: |
           sfp pool sandbox init -f ${{ inputs.path-to-config }} -r  ${{ github.repository }}  -v devhub


      #Update sandbox status
      - name: 'Update Sandbox status '
        uses:  flxbl-azlam/sfops-gh-actions/sandboxStatusReporter@main
        continue-on-error: true
        with:
          dashboard-repo: ${{ inputs.dashboard-repo }}
          gh_token:  ${{ steps.app-token.outputs.token }}




