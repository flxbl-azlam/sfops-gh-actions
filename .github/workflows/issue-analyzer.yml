name: 'IssueOps - Analyze/Execute an issue'

on:
  workflow_call:
     inputs:
        issue-title: 
          description: "The title of the issue"
          type: "string"
        issue-body: 
          description: "The body of the issue"
          type: "string"
        issue-number:
          description: "The number of the issue"
          type: "string"
        metrics-provider:
          description: "The metrics provider to be used"
          type: "string"
        sfopsbot-app-id: 
          description: The App id of the bot used for this workflow_call
          type: "string"
        dashboard-repo: 
          description: Dashboard repo where any reports need to be push
          type: "string"          
     secrets:
      NPM_TOKEN:
        description: "GH TOKEN to publish to NPM"
      DEVHUB_SFDX_AUTH_URL:
        description: "Devhub Auth URL"
      SB_SFDX_AUTH_URL:
        description: "Sandbox Auth URL"
      DATADOG_API_KEY:
        description: "Datadog api key to report metrics"
      DATADOG_HOST:
        description: "Datadog host to report metrics"
      SFOPSBOT_APP_PRIVATE_KEY:
        description: "Private key of the bot app used"


jobs:

  analyze_issue:
      runs-on: ubuntu-latest
      outputs:
        sfops_issue: ${{ steps.sfops_issue_analyzer.outputs.sfops_issue }}
        sfops_issue_envs: ${{ steps.sfops_issue_analyzer.outputs.sfops_issue_envs }}
      steps:

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
  
      - name: Analyze Issue
        uses: flxbl-azlam/sfops-gh-actions/issueAnalyzer@main
        id: sfops_issue_analyzer
        with:
          repo_owner: ${{ github.repository_owner }}
          repo_name: ${{ github.event.repository.name }}
          issue: ${{ github.event.issue.number }}
          token: ${{ steps.app-token.outputs.token }}
          exclude_issues: 'request-a-release-release-envs,request-a-release'

      - name: Create Comment on Issue
        uses: flxbl-azlam/sfops-gh-actions/add-pr-comment@main
        if: ${{ steps.sfops_issue_analyzer.outputs.sfops_issue == 'true'}}
        with:
          issue: ${{ github.event.issue.number }}
          repo-token: ${{ steps.app-token.outputs.token }}
          message: |      
            Hello @${{ github.event.issue.user.login }} :wave: ,

            [sfops ðŸ¤–] is analyzing the issue.. Hold on!

            You can follow the action at this link: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

            [1]: This comment is auto generated by [sfops ðŸ¤–]

       # gh needs checking out
      - name: Checkout Repository
        if: ${{ steps.sfops_issue_analyzer.outputs.sfops_issue == 'false'}}
        uses: actions/checkout@v4


      - name: Cancel deployment if no changes
        id: cancel-if-necessary
        if: ${{ steps.sfops_issue_analyzer.outputs.sfops_issue == 'false'}}
        run: |
            echo "Not an sfops issue or its excluded,  Cancelling workflow run."
            gh auth status
            gh run cancel ${{ github.run_id }}
        env:
            GH_TOKEN: ${{ steps.app-token.outputs.token }}

  execute_issue:
      runs-on: ubuntu-latest
      container: ghcr.io/flxbl-azlam/sfops-gh-actions-lite:latest
      needs:
        - analyze_issue
      if: needs.analyze_issue.outputs.sfops_issue == 'true'
      strategy:
        fail-fast: false
        matrix:
          environment: ${{ fromJSON(needs.analyze_issue.outputs.sfops_issue_envs) }}
      environment:
          name: ${{ matrix.environment }}
      outputs:
        created_envs: ${{ steps.track-envs.outputs.created_envs }}
      steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: 'Authenticate DevHub'
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sfp org login -f authfile -a devhub
  
      - name: Authenticate to environment - ${{ matrix.environment }}
        id: handle-auth
        if: ${{ matrix.environment != 'devhub' }}
        uses: flxbl-azlam/sfops-gh-actions/authToEnvironment@main
        with:
          DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
          SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
          environment: ${{ matrix.environment }}
          org-name: ${{ vars.SBXNAME  || vars.SBX_NAME }}
          environment-profile: ${{ matrix.environment }}

      - name: Add comment if authentication fails
        if: failure() && steps.handle-auth.conclusion == 'failure'
        uses: flxbl-azlam/sfops-gh-actions/add-pr-comment@main
        with:
         issue: ${{ github.event.issue.number }}  
         repo-token: ${{ steps.app-token.outputs.token }}
         message: |
           Authentication to the ${{ matrix.environment }} environment failed. Please check the credentials and try again.
           
           [1]: This comment is auto generated by [sfops ðŸ¤–]
           
      - name: 'Execute Issue'
        id: execute_issue
        if: steps.handle-auth.conclusion == 'success' || matrix.environment == 'devhub'
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}
          SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY}}
          SFOPSBOT_APP_ID: ${{ inputs.sfopsbot-app-id }}
        run: |
          if [ "${{ github.event.action }}" == "opened" ] || [ "${{ github.event.action }}" == "reopened" ]; then
            sfp gh issue run -i ${{ github.event.issue.number }} -p env=${{ matrix.environment }} -r ${{ github.repository }} -a open
          fi

      - uses: actions/create-github-app-token@v1
        name: Get a refreshed app token
        if: always()
        id: app-token-refreshed
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}


      - name: "Push changes to dev central"
        id: updateGitRepo
        uses: flxbl-azlam/sfops-gh-actions/updateGitRepo@main
        if: ${{ steps.execute_issue.outcome == 'success' && steps.execute_issue.outputs.sfops_devcentral_update_required == 'true'}}
        with:
         target-repo: ${{ inputs.dashboard-repo }}
         source-dir: _data
         target-dir: _data
         commit-message: ${{ steps.execute_issue.outputs.sfops_devcentral_commit_message || 'Update devcentral' }}
         update-release-names: false
         gh_token: ${{ steps.app-token-refreshed.outputs.token }}

         
      - name: Report env infos
        uses: flxbl-azlam/sfops-gh-actions/reportEnvInfos@main
        with:
          gh_token: ${{ steps.app-token-refreshed.outputs.token }}
          dashboard-repo: ${{ inputs.dashboard-repo }}

      - name: Delete variable if workflow is canceled
        if: cancelled() || failure()
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ steps.app-token-refreshed.outputs.token }}
        run: |
          gh variable delete CONTEXT_${{ github.event.issue.number }} --repo ${{ github.repository }}

