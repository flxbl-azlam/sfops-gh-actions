

name: "Environment Related Jobs every 30 mins"
on:
  workflow_call:
    inputs:
      path-to-config:
        description: The path to sandbox pool config
        type: "string"
      metrics-provider:
        description: "The metrics provider to be used"
        type: "string"
      dashboard-repo:
        description: "Target repo to submit package version report as HTML"
        type: "string"
      sfopsbot-app-id:
        description: The App id of the bot used for this workflow_call
        type: "string"
      sfp-server-url: 
         description: The URL to the sfp server instance
         type: "string"
    secrets:
      NPM_TOKEN:
        description: "GH TOKEN to publish to NPM"
      DEVHUB_SFDX_AUTH_URL:
        description: "Devhub Auth URL"
      SB_SFDX_AUTH_URL:
        description: "Sandbox Auth URL"
      DATADOG_API_KEY:
        description: "Datadog api key to report metrics"
      DATADOG_HOST:
        description: "Datadog host to report metrics"
      SFOPSBOT_APP_PRIVATE_KEY:
        description: "Private key of the bot app used"
      SFP_SERVER_TOKEN:
        description: "SFP Server Token"

jobs:
  check-sandbox-status:
    runs-on: ubuntu-latest
    continue-on-error: true
    container: ghcr.io/flxbl-azlam/sfops-gh-actions-lite:latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Export Datadog Environment Variables
        run: |
         if [ '${{ inputs.metrics-provider }}' = 'datadog' ]; then
           export "SFPOWERSCRIPTS_DATADOG=true" 
           export "SFPOWERSCRIPTS_DATADOG_HOST=${{ inputs.DATADOG_HOST }}"
           export "SFPOWERSCRIPTS_DATADOG_API_KEY=${{ inputs.DATADOG_API_KEY }}"
          fi


      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          skip-token-revoke: true

      - name: "Authenticate DevHub"
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sfp org login -f authfile -a devhub


      - name: "Monitor sandbox pools"
        run: |
          sfp pool sandbox monitor -f  ${{ inputs.path-to-config }} -v devhub -r ${{ github.repository }} 
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY}}
          SFOPSBOT_APP_ID: ${{ inputs.sfopsbot-app-id }}


      - uses: actions/create-github-app-token@v1
        id: app-token-refreshed
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          skip-token-revoke: true


      - name: "Update Sandbox status "
        uses: flxbl-azlam/sfops-gh-actions/sandboxStatusReporter@main
        continue-on-error: true
        with:
          dashboard-repo: ${{ inputs.dashboard-repo }}
          gh_token: ${{ steps.app-token-refreshed.outputs.token }}

  update-scratchorg-status:
    runs-on: ubuntu-latest
    continue-on-error: true
    container: ghcr.io/flxbl-azlam/sfops-gh-actions-lite:latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Report Scratch Org Status
        uses: flxbl-azlam/sfops-gh-actions/scratchOrgStatusReporter@main
        with:
          devhub_sfdx_auth_url: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
          dashboard-repo: ${{ inputs.dashboard-repo }}
          gh_token: ${{ steps.app-token.outputs.token }}

  update-sandbox-frontdoor-url:
    runs-on: ubuntu-latest
    continue-on-error: true
    container: ghcr.io/flxbl-azlam/sfops-gh-actions-lite:latest
    if: inputs.sfp-server-url == ''
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Update sandbox frontdoor url
        uses: flxbl-azlam/sfops-gh-actions/refreshFrontDoorUrl@main
        with:
          devhub_sfdx_auth_url: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
          gh_token: ${{ steps.app-token.outputs.token }}
          dashboard-repo: ${{ inputs.dashboard-repo }}

  update-workitem-status:
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-azlam/sfops-gh-actions-lite:latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Report env infos
        uses: flxbl-azlam/sfops-gh-actions/reportEnvInfos@main
        with:
          gh_token: ${{ steps.app-token.outputs.token }}
          dashboard-repo: ${{ inputs.dashboard-repo }}

      - name: Report work item status
        uses: flxbl-azlam/sfops-gh-actions/prStatusReporter@main
        with:
          gh_token: ${{ steps.app-token.outputs.token }}
          dashboard-repo: ${{ inputs.dashboard-repo }}

  execute-jobs:
    runs-on: ubuntu-latest
    continue-on-error: true
    container: ghcr.io/flxbl-azlam/sfops-gh-actions-lite:latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4


      - name: 'Authenticate DevHub'
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sfp org login -f authfile -a devhub

      - name: 'Execute Job'
        id: execute_job
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}
          SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY}}
          SFOPSBOT_APP_ID: ${{ inputs.sfopsbot-app-id }}
        run: |
          sfp gh jobs run -r ${{ github.repository }}